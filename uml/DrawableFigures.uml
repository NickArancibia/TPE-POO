@startuml
Interface Figure{
    +boolean pointInFigure(Point p)
    +void move(double deltaX, double deltaY)
    +boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +void scaleUp()
    +void scaleDown()
    +void flipV()
    +void flipH()
    +void rotate()
}
abstract class DrawableFigure<T extends Figure>{
    #final T baseFigure
    #Color color
    -boolean gradientToggled 
    -boolean shadowToggled 
    -boolean bevelToggled
    -Set<String> tags
    +void draw(GraphicsContext gc, TagFilterPane tagFilterPane)
    +DrawableFigure(T baseFigure, Color color)   
    +boolean isFigureVisible(TagFilterPane tagFilterPane)
    +Color getColor()
    +void setGradientToggled(boolean toggle)
    +boolean isGradientToggled()
    +void setShadowToggled(boolean toggle)
    +boolean isShadowToggled()
    +void setBevelToggled(boolean toggle)
    +boolean isBevelToggled()
    +void setTags(Collection<String> tags)
    +Set<String> getTags()
    +boolean pointInFigure(Point p)
    +void move(double deltaX, double deltaY)
    +void scaleUp()
    +void scaleDown()
    +void rotate()
    +void flipV()
    +void flipH() 
    +boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +String toString()
    #abstract void drawFigure(GraphicsContext gc) 
}

class DrawableGroup {
    +DrawableGroup(Color color)
    +DrawableGroup()
    +DrawableGroup(DrawableFigure<? extends Figure> figure)
    +void add(DrawableFigure<? extends Figure> figure)
    +void addAll(DrawableGroup group)
    +void addAll(Collection<DrawableGroup> groups)
    +FigureGroup<DrawableFigure<? extends Figure>> getFigures()
    +Collection<DrawableGroup> ungroup()
    +int size()
    +void setGradientToggled(boolean toggle)
    +void setShadowToggled(boolean toggle)
    +void setBevelToggled(boolean toggle)
    +boolean isShadowToggled()
    +boolean someShadowToggled()
    +boolean isGradientToggled()
    +boolean someGradientToggled()
    +boolean isBevelToggled()
    +boolean someBevelToggled()
    +Set<String> getTags()
    +void setTags(Collection<String> tags)
    +boolean isFigureVisible(TagFilterPane tagFilterPane)
    #void drawFigure(GraphicsContext gc)
    -void applyConsumer(Consumer<DrawableFigure<? extends Figure>> consumer)
    -boolean isToggled(Function<DrawableFigure<? extends Figure>, Boolean> toggled)
    -boolean someToggled(Function<DrawableFigure<? extends Figure>, Boolean> toggled)
    
}

class DrawableRectangle {
    +DrawableRectangle(Point topLeft, Point bottomRight, Color color)
    +DrawableRectangle(Rectangle rectangle, Color color)
    #void drawFigure(GraphicsContext gc)
    -void drawShadow(GraphicsContext gc)
    -void drawGradient(GraphicsContext gc) 
    -void drawBevel(GraphicsContext gc)
    
}

class DrawableEllipse {
    +DrawableEllipse(Point centerPoint, double sMayorAxis, double sMinorAxis, Color color)
    +DrawableEllipse(Ellipse ellipse, Color color)
    #void drawFigure(GraphicsContext gc)   
    -void drawShadow(GraphicsContext gc) 
    -void drawGradient(GraphicsContext gc) 
    -void drawBevel(GraphicsContext gc)
   
}

class DrawableCircle {
    +DrawableCircle(Point centerPoint, double radius, Color color)
}

class DrawableSquare {
    +DrawableSquare(Point topLeft, double size, Color color)
}

DrawableEllipse <|-- DrawableCircle
DrawableRectangle <|-- DrawableSquare 
Figure <-.. DrawableFigure : implements
DrawableFigure <|-- DrawableGroup : <FigureGroup<DrawableFigure<? extends Figure>>>
DrawableFigure <|-- DrawableRectangle : <Rectangle>
DrawableFigure <|-- DrawableEllipse : <Ellipse>
@enduml
