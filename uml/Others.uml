@startuml
class ArrayList<T>{}

 
class CanvasState{}



class SelectionManager {
  - List<FigureGroup> selectedGroups
  +boolean selectFiguresInRect(Collection<Figure> figures, Point topLeft, Point bottomRight, boolean isFilteringByTags, String filterTag)
  + void add(FigureGroup group)
  + void clearSelection()
  + boolean atLeastTwoSelected() 
  + boolean noneSelected()
  + FigureGroup groupSelection()
  + Collection<FigureGroup> ungroupSelection() 
  + Collection<FigureGroup> getSelection()
  + boolean isSelected(FigureGroup group)
  + void applyActionToSelection(Consumer<FigureGroup> consumer)
  + boolean isShadowToggled()
  + boolean someShadowToggled()
  + boolean isGradientToggled()
  + boolean someGradientToggled()
  + boolean isBevelToggled()
  + boolean someBevelToggled()
  -boolean isToggled(Predicate<FigureGroup> toggled)
  -boolean someToggled(Predicate<FigureGroup> toggled)
  
}

class AppLauncher{
 +{static} void main(String[] args)
 +void start(Stage primaryStage)
}


class MainFrame {
 +MainFrame(CanvasState canvasState, SelectionManager selectionManager)
}


class AppMenuBar {
    +AppMenuBar()
}



class TagFilterPane{
    
    -final Label showTagsLabel
    -final RadioButton showAllButton
    -final RadioButton filterTagButton
    -final TextField filterTagField
    -final ToggleGroup showTagsGroup

    +TagFilterPane()
    +TextField getFilterTagTextField()
    +String getFilterTag()
    +boolean isFiltering()
    +RadioButton getShowAllButton()
    +RadioButton getFilterTagButton()
}

class StatusPane {
	-final Label statusLabel
	+StatusPane()
	+void updateStatus(String text)
}


class ShapeDrawPropertiesPane {
    -final CheckBox shadowCheckBox
    -final CheckBox gradientCheckBox
    -final CheckBox bevelCheckBox

    +ShapeDrawPropertiesPane()
    +void setState(boolean isShadowToggled, boolean isGradientToggled, boolean isBevelToggled) 
    +void setSomeState(boolean someShadowToggled, boolean someGradientToggled, boolean someBevelToggled)
    +CheckBox getShadowCheckBox() 
    +CheckBox getGradientCheckBox()
    +CheckBox getBevelCheckBox()
}

class ButtonsBoxPane {

    -final ToggleButton selectionButton
    -final ToggleButton rectangleButton
    -final ToggleButton circleButton
    -final ToggleButton squareButton
    -final ToggleButton ellipseButton
    -final Button deleteButton
    -final Button groupButton
    -final Button ungroupButton
    -final Button rotateButton
    -final Button flipVButton
    -final Button flipHButton
    -final Button scaleUpButton
    -final Button scaleDownButton
    -final Label tagsLabel
    -final TextArea tagsArea
    -final Button saveTagsButton
    -Color defaultFillColor
    -ColorPicker fillColorPicker
    -ToggleButton[] toggleToolsArr
    -Button[] toolsArr
    +ButtonsBoxPane()
    +Button getDeleteButton() 
    +Button getGroupButton() 
    +Button getUngroupButton() 
    +Button getFlipHButton() 
    +Button getFlipVButton() 
    +Button getRotateButton() 
    +Button getSaveTagsButton() 
    +Button getScaleDownButton() 
    +Button getScaleUpButton() 
    +ToggleButton getCircleButton() 
    +ToggleButton getEllipseButton() 
    +ToggleButton getRectangleButton() 
    +ToggleButton getSelectionButton() 
    +ToggleButton getSquareButton() 
    +String getFillColorPickerColorAsString()
    +TextArea getTagsArea() 
    +Set<String> getTagsFromTagsArea()
    +void setTags(Set<String> tags)
    +String getFillColorPickerColorAsString()
    -{static} String stringifyTags(Set<String> tags)
}



class PaintPane {
     Canvas canvas 
     GraphicsContext gc  
    -final double toleranceForMouseClick
    -final CanvasState canvasState
    -Point startPoint
    -final SelectionManager selectionManager 
    -final ShapeDrawPropertiesPane drawPropertiesPane
    -final TagFilterPane tagFilterPane
 
   +PaintPane(CanvasState canvasState, SelectionManager selectionManager, StatusPane statusPane, ShapeDrawPropertiesPane drawPropertiesPane, TagFilterPane tagFilterPane,ButtonsBoxPane buttonsPane)
   -boolean isMovingFigures(Point endPoint)
   -void createFigure(Figure figure)
   -boolean clickOnFigure(Point eventPoint, List<FigureGroup> figures, StringBuilder label)
   -void redrawCanvas()
   -void clearSelectionAndRedraw()
}

SelectionManager *-- ArrayList
PaintPane *-- CanvasState
PaintPane *-- StatusPane
PaintPane *-- ShapeDrawPropertiesPane
PaintPane *-- ButtonsBoxPane
PaintPane *-- TagFilterPane
PaintPane *-- SelectionManager 
PaintPane *-- EllipseDrawManager
PaintPane *-- RectangleDrawManager

MainFrame *-- AppMenuBar
MainFrame *-- StatusPane
MainFrame *-- ShapeDrawPropertiesPane
MainFrame *-- TagFilterPane
MainFrame *-- ButtonsBoxPane
MainFrame *-- PaintPane
ArrayList <|-- CanvasState : <FigureGroup>

AppLauncher *--CanvasState
AppLauncher *--SelectionManager
AppLauncher *--MainFrame

@enduml
