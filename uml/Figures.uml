@startuml
abstract class Figure{
    -final String colorAsHex
    -boolean gradientToggled 
    -boolean shadowToggled 
    -boolean bevelToggled 
    -Set<String> tags
    -final DrawManager drawManager

    +Figure(String colorAsHex,DrawManager drawManager)
    +void draw()
    +String getColorAsHex()
    +void setGradientToggled(boolean toggle)
    +boolean isGradientToggled()
    +void setShadowToggled(boolean toggle)
    +boolean isShadowToggled()
    +void setBevelToggled(boolean toggle)
    +boolean isBevelToggled()
    +void setTags(Collection<String> tags)
    +boolean hasTag(String tag)
    +Set<String> getTags()
    +{abstract} boolean pointInFigure(Point p)
    +{abstract} void move(double deltaX, double deltaY)
    +{abstract} boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +{abstract} void scaleUp()
    +{abstract} void scaleDown()
    +{abstract} void flipV()
    +{abstract} void flipH()
    +{abstract} void rotate()
}
class ArrayList<T>{}
class HashSet<E>{}


class Ellipse{
    -final Point centerPoint
    -double sMayorAxis
    -double sMinorAxis
    +Ellipse(Point centerPoint, double sMayorAxis, double sMinorAxis, String colorAsHex,DrawManager<Ellipse> drawManager)
    +Point getCenterPoint()
    +double getsMayorAxis()
    +double getsMinorAxis()
    +String toString()
    +boolean pointInFigure(Point p)
    +void move(double deltaX, double deltaY)
    +boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +void flipV()
    +void flipH()
    +void rotate()
    +void scale(double factor)
}

class Rectangle{
   -final Point topLeft
   -final Point bottomRight
    +Rectangle(Point topLeft, Point bottomRight, String colorAsHex,DrawManager<Rectangle> drawManager)
    +Point getTopLeft() 
    +Point getBottomRight()
    +String toString()
    +double getBase()
    +double getHeight()
    +boolean pointInFigure(Point p)
    +void move(double deltaX, double deltaY)
    +boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +void flipV()
    +void flipH()
    +void rotate()
    +void scale(double factor)
    -void turnAround(double deltaX,double deltaY)
}

class Point{

    -double x
    -double y
    +Point(double x, double y)
    +double getX()
    +double getY()
    +double distance(Point otherPoint)
    +void move(double deltaX, double deltaY)
    +boolean isPointInRectangle(Point topLeft, Point bottomRight)
    +String toString()
}

class FigureGroup{
     
    +FigureGroup()
    +FigureGroup(Figure figure)
    +void add(Figure figure)
    +void addAllGroups(Iterable<FigureGroup> figureGroups)
    +Collection<FigureGroup> ungroup()
    +void draw()
    +void setGradientToggled(boolean toggle)
    +void setShadowToggled(boolean toggle)
    +void setBevelToggled(boolean toggle)
    +boolean isShadowToggled()
    +boolean someShadowToggled()
    +boolean isGradientToggled()
    +boolean someGradientToggled()
    +boolean isBevelToggled()
    +boolean someBevelToggled()
    +void setTags(Collection<String> tags)
    +Set<String> getTags()
    +boolean pointInFigure(Point p)
    +void move(double deltaX, double deltaY)
    +boolean isFigureInRectangle(Point topLeft, Point bottomRight)
    +void scaleUp()
    +void scaleDown() 
    +void flipH()
    +void flipV()
    +void rotate() 
    +boolean hasTag(String filterTag)
    -boolean isToggled(Predicate<Figure> toggled)
    -boolean someToggled(Predicate<Figure> toggled)
}

class Circle{
    +Circle(Point centerPoint, double radius, String colorAsHex, DrawManager<Ellipse> drawManager)
    +double getRadius()
    +String toString()
}

class Square{
+Square(Point topLeft, double size, String colorAsHex, DrawManager<Rectangle> drawManager)
+String toString()
}

interface DrawManager<T extends Figure>{
    +void drawShape(T figure)
    +void drawBevel(T figure)
    +void drawGradient(T figure)
    +void drawShadow(T figure)
    +default void draw(T figure)
}

ArrayList <|-- FigureGroup : Figure
Rectangle <|-- Square
Ellipse <|-- Circle
Figure <|-- Rectangle
Figure <|-- Ellipse 

Figure *-- HashSet
Point *-- Rectangle
Point *-- Ellipse
Figure *-- DrawManager
@enduml
